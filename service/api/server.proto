syntax = "proto3";

package service;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/JUSSIAR/Golang-gRPC-blog/service/api";

service BlogServer {
    rpc Like(LikeRequest) returns (LikeResponse) {
        option (google.api.http) = {
            post: "/like"
            body: "*"
        };
    }

    rpc Unlike(LikeRequest) returns (LikeResponse) {
        option (google.api.http) = {
            post: "/unlike"
            body: "*"
        };
    }

    rpc CreatePost(PostRequestCreate) returns (PostResponse) {
        option (google.api.http) = {
            post: "/posts/create"
            body: "*"
        };
    }

    rpc ReadPost(PostRequestReadDelete) returns (PostResponse) {
        option (google.api.http) = {
            get: "/posts/read"
        };
    }

    rpc UpdatePost(PostRequestUpdate) returns (PostResponse) {
        option (google.api.http) = {
            post: "/posts/update"
            body: "*"
        };
    }

    rpc DeletePost(PostRequestReadDelete) returns (PostResponse) {
        option (google.api.http) = {
            post: "/posts/delete"
            body: "*"
        };
    }

    rpc CreateComment(CommentRequestCreate) returns (CommentResponse) {
        option (google.api.http) = {
            post: "/commets/create"
            body: "*"
        };
    }

    rpc ReadComment(CommentRequestReadDelete) returns (CommentResponse) {
        option (google.api.http) = {
            get: "/commets/read"
        };
    }

    rpc UpdateComment(CommentRequestUpdate) returns (CommentResponse) {
        option (google.api.http) = {
            post: "/commets/update"
            body: "*"
        };
    }

    rpc DeleteComment(CommentRequestReadDelete) returns (CommentResponse) {
        option (google.api.http) = {
            post: "/commets/delete"
            body: "*"
        };
    }
}

enum EType {
    POST = 0;
    COMMENT = 1;
}

message LikeRequest {
    EType eType = 1;
    uint64 eId = 2;
    string authorLogin = 3;
}

message LikeResponse {
    uint64 likeCount = 1;
    bool isLiked = 2; 
}

message CommentResponse {
    uint64 id = 1;
    string authorLogin = 2;
    string text = 3;
    google.protobuf.Timestamp timestamp = 4;
    uint64 postId = 5;
}

message PostResponse {
    uint64 id = 1;
    string authorLogin = 2;
    string title = 3;
    string text = 4;
    google.protobuf.Timestamp timestamp = 5;
}

message CommentRequestReadDelete {
    uint64 id = 1;
}

message CommentRequestCreate {
    string authorLogin = 2;
    string text = 3;
    uint64 postId = 4;
}

message CommentRequestUpdate {
    uint64 id = 1;
    string text = 2;
}

message PostRequestReadDelete {
    uint64 id = 1;
}

message PostRequestCreate {
    string authorLogin = 1;
    string title = 2;
    string text = 3;
}

message PostRequestUpdate {
    uint64 id = 1;
    string title = 2;
    string text = 3;
}
